<script>

dojoConfig = {
    parseOnLoad: false,
    packages: [
      {name: 'lazyload', location: "../lazyload", main: 'lazyload'},
      {name: 'jDataView', location: '../jDataView/src', main: 'jdataview'},
      {name: "FileSaver", location: "../FileSaver", main: "FileSaver"}
    ]
  }
</script>

<!-- Scripts -->
<%
const load_scripts = [
  "msa/dist/msa.min.js",
  "bvbrc_js_client/dist/bvbrc_client.js",
  "bundle/bundle.js",
  "bundle/bundle2.js"
]
%>

<% if (request && request.production){ %>
  <% load_scripts.forEach(function(url){ %>
    <script type="text/javascript" src="/js/<%- request.package.version %>/<%- url %>"></script>
  <% }) %>
<% } else { %>
  <% load_scripts.forEach(function(url){ %>
    <script type="text/javascript" src="/js/<%- url %>"></script>
  <% }) %>
<% } %>

<script type="text/javascript">
  function toggleMenu() {
    const hamburgerButton = document.querySelector('.hamburger-icon');
    const menu = document.getElementById("mobile-navbar");

    hamburgerButton.classList.toggle('open');
    menu.classList.toggle("hidden");
  }

  function toggleSubMenu(header) {
    const subMenu = header.nextElementSibling; // Get the the sub-menu
    const icon = header.querySelector('.icon-chevron-down');

    if (subMenu.style.display === "block") {
      header.classList.remove('open');
      subMenu.style.display = "none";
      icon.classList.remove('open');
    } else {
      header.classList.add('open');
      subMenu.style.display = "block";
      icon.classList.add('open');
    }
  }

  function toggleSearch() {
    const searchButton = document.querySelector('.search-icon');
    const searchbar = document.getElementById("mobile-searchbar");

    searchButton.classList.toggle('open');
    searchbar.classList.toggle("hidden");
  }

  $(window).on('load', function () {
    // LinkedIn Feed
    let $linkedInFeedElm = $("#linkedin-feed");

    // Fetch the data only if feed element exists in the page
    if ($linkedInFeedElm.length) {
      $.getJSON({
        url: '/linkedin/posts/?count=8',
        success: function (data) {
          for (let post of data.elements) {
            if (post.id && post.id.includes('share')) {
              $("#linkedin-slides").append(
                      `<li class="slide" style="height: 100%;">
                         <div class="iframe-container" style="position: relative; width: 100%; height: 100%;">
                           <div class="iframe-placeholder"
                                style="position: absolute; top: 50%; left: 50%; transform: translate(-50%, -50%); z-index: 1; transition: opacity 0.3s ease;">
                             <p>Loading the news...</p>
                           </div>
                           <iframe data-src="https://www.linkedin.com/embed/feed/update/${post.id}"
                                   style="height: 100%; width: 100%; opacity: 0; border: none; transition: opacity 0.3s ease;"
                                   loading="lazy"></iframe>
                         </div>
                       </li>`
              );
              $("#linkedin-dot-navigation").append(
                      `<div class="dot" role="button" aria-selected="false"></div>`
              );
            }
          }

          initializeSlide($('#linkedin-slides .slide'), $("#linkedin-dot-navigation .dot"));
        },
        error: function (data) {
          console.log(data);
        }
      });
    }

    // News & Announcements Carousel
    $.getJSON("https://www.bv-brc.org/docs/_static/carousel.json", function (feed) {
      for (var i = 0; i < feed.length; i++) {
        const link = feed[i].link;
        const title = feed[i].title;
        const desc = feed[i].desc;
        const img = feed[i].img;
        // Determine description to display
        let descContent;
        const descArr = desc.split(" ");
        if (img !== "" && descArr.length > 30) {
          descContent = descArr.slice(0, 30).join(" ") + " ... <a href='" + link + "'>read more</a>";
        } else if (descArr.length > 60) {
          descContent = descArr.slice(0, 60).join(" ") + " ... <a href='" + link + "'>read more</a>";
        } else {
          descContent = desc;
        }

        $("#announcements-slides").append(
                `<li class="slide">
                  <a href="${link}" class="feed-link">
                      <h4 class="feed-title">${title}</h4>
                  </a>
                  <p class="feed-description">${descContent}</p>
                  <img src="${img}" class="feed-img"  loading="lazy">
              </li>`
        );
        $("#announcements-dot-navigation").append(
                `<div class="dot" role="button" aria-selected="false"></div>`
        );
      }

      initializeSlide($('#announcements-slides .slide'), $("#announcements-dot-navigation .dot"));
    });
  });

  function initializeSlide($slides, $dots) {
    $slides.first().addClass("showing current-slide");
    $dots.first().addClass("selected current-dot").attr('aria-selected', 'true');

    let index = 0;
    loadSlide($slides.eq(index));

    $dots.click(function () {
      $dots.eq(index).removeClass("current-dot").attr('aria-selected', 'false');
      $slides.eq(index).removeClass("current-slide");

      $(this).addClass("current-dot").attr('aria-selected', 'true');
      index = $(this).index();

      $slides.eq(index).addClass("current-slide");

      loadSlide($slides.eq(index));
    });
  }

  function loadSlide(slide) {
    const $iframeContainer = slide.find('.iframe-container');
    const $iframe = $iframeContainer.find('iframe');
    const $placeholder = $iframeContainer.find('.iframe-placeholder');

    // Only load the iframe if it's not already loaded
    if ($iframe.length && !$iframe.attr('src')) {
      const dataSrc = $iframe.attr('data-src');

      // Bind the load event before setting the src
      $iframe.on('load', function () {
        $placeholder.fadeOut(300, function () {
          $iframe.css('opacity', 1);
        });
      });

      $iframe.attr('src', dataSrc);
      $iframe.css('opacity', 0); // Start hidden
    }
  }
</script>

<!-- // use bundle.js
<script type="text/javascript" src="/js/cytoscape/dist/cytoscape.min.js"></script>
<script type="text/javascript" src="/js/jquery/dist/jquery.min.js"></script>
<script type="text/javascript" src="/js/webcola/WebCola/cola.min.js"></script>
<script type="text/javascript" src="/js/dagre/dist/dagre.min.js"></script>
<script type="text/javascript" src="/js/cytoscape-cose-bilkent/cytoscape-cose-bilkent.js"></script>
-->

<% if (request && request.production){ %>
  <script src="/js/<%- request.package.version %>/dojo/dojo.js"></script>
  <script>

  require(<%- JSON.stringify(request.productionLayers) %>, function(){
    <% } else { %>
      <script src="/js/dojo/dojo.js"></script>
      <script>
      <% } %>

      require([
      "dojo/dom",
      "dojo/dom-geometry",
      "dojo/on",
      "dojo/query",
      "dojo/domReady!"
    ], function(dom, domGeometry, on, query) {

      function adjustHeight() {
        console.log('in function');
        // These seemingly random div ids come from stepping through the pages and finding which ones exist and the proper order in which to
        // check them to ensure proper reactions. I'm not honestly sure of the origin of this naming convention, I'm just working with what I
        // got here! -DJG (3/5/25)
        // These first three are the three possibilities on Services pages. Mostly it's the first one, but the other two show up and need to be dealt with
        var uContainer = dom.byId("uniqName_13_0");
        if (uContainer === null) {
          var uContainer = dom.byId("uniqName_17_0");
        }
        if (uContainer === null) {
          var uContainer = dom.byId("uniqName_11_0");
        }
        if (uContainer === null) {
          // This is the one-time case of the results page to the Advanced Search. The id of the div changes, so we need to grab it by its class.
          var divs = query(".AdvancedSearch");
          var firstDiv = divs[0];
          var uContainer = firstDiv;
        }
        // If nothing else is there, we just default to the ApplicationContainer so as not to break the code
        if (uContainer === null) {
          var uContainer = dom.byId("ApplicationContainer");
        }
        var appContainer = dom.byId("ApplicationContainer");
        // We grab the full height of the included page....
        var contentHeight = uContainer.scrollHeight + 60;
        // Reset both of these since, depending on the page, one of them is the one that needs it and there are no ill effects to resizing both
        uContainer.style.height = contentHeight + "px";
        appContainer.style.height = contentHeight + "px";
      }

      // Call the function to adjust height initially
      timeoutId = setTimeout(function() {
              adjustHeight();
            }, 250); //

      // Using MutationObserver to watch for changes in the DOM
      var observer = new MutationObserver(function(mutations) {
        console.log("Mutation detected"); // Debug log to see if observer is firing

        // We need to check if we're on the search page to adjust the timeout time since that needs more. We can't just leave it as higher since that will
        // negatively impact all the other pages.
        var divs = query(".AdvancedSearch");
        if (divs[0] != null) {
          timespan = 3000;
        }
        else {
          timespan = 250;
        }

        // If any mutations occur, reset the timeout
        if (timeoutId) {
          clearTimeout(timeoutId);
        }

        // This can't be immediate since sometimes the page changes haven't finished yet, which jams things up.
        // I played around on the search results page, which is where this came into play, and 3 seconds seemed to
        // be the lowest I could go with a high enough success rate.
        timeoutId = setTimeout(function() {
          adjustHeight();
        }, timespan);
      });

      var cContainer = dom.byId("centerContent");
      if(cContainer != null) {
      // Observe the container for changes to its child nodes
      observer.observe(dom.byId("centerContent"), {
        childList: true,
        subtree: true
      });
      }

      query("a.navigationLink").forEach(function(link) {
        on(link, "click", function(event) {
          timeoutId = setTimeout(function() {
            location.reload();
            }, 10); //
        });
      });
    });

      require(["<%= request.applicationModule %>"], function(App){
        appOpts = <%- JSON.stringify(request.applicationOptions || {}) %>;
        appOpts.workspaceAPI = "<%= request.applicationOptions.workspaceServiceURL %>";
        appOpts.serviceAPI = "<%= request.applicationOptions.appServiceURL %>";
        appOpts.dataAPI = "<%= request.applicationOptions.dataServiceURL %>";
        appOpts.userServiceURL = "<%= request.applicationOptions.userServiceURL %>";
        appOpts.mailinglistURL = "<%= request.applicationOptions.mailinglistURL %>";
        appOpts.localStorageCheckInterval = "<%= request.applicationOptions.localStorageCheckInterval %>";
        window.App = new App(appOpts);
      });
      <% if (request && request.production){ %>
      });
      <% } %>
      </script>
      <!-- Google Analytics 4 -->
      <% if (request && request.applicationOptions.gaID) { %>
        <!-- Global site tag (gtag.js) - Google Analytics -->
        <script async src="https://www.googletagmanager.com/gtag/js?id=<%- request.applicationOptions.gaID %>"></script>
        <script>
        window.dataLayer = window.dataLayer || [];
        function gtag(){dataLayer.push(arguments);}
        gtag('js', new Date());

        gtag('config', '<%- request.applicationOptions.gaID %>', {
          'link_attribution': true
        });
        </script>
        <% } %>

      <!-- Google UA (EOL) -->
      <% if (request && request.applicationOptions.uaID) { %>
          <!-- Global site tag (gtag.js) - Google Analytics -->
          <script async src="https://www.googletagmanager.com/gtag/js?id=<%- request.applicationOptions.uaID %>"></script>
          <script>
          window.dataLayer = window.dataLayer || [];
          function gtag(){dataLayer.push(arguments);}
          gtag('js', new Date());

          gtag('config', '<%- request.applicationOptions.uaID %>', {
            'link_attribution': true
          });
          </script>
          <% } %>
